#!/bin/bash 
#PBS -N mapgd-para-debug
#PBS -k o
#PBS -l nodes=1:ppn=16,walltime=6:00:00
#PBS -l vmem=100gb
#PBS -M ouqd@hotmail.com
#PBS -m abe
#PBS -j oe

set +x
echo PBS -N mapgd-debug
echo PBS -k o
echo PBS -l nodes=1:ppn=16,walltime=12:00:00
echo PBS -l vmem=100gb
echo PBS -M ouqd@hotmail.com
echo PBS -m abe
echo PBS -j oe
echo Updated on 05/28/2018
echo module rm gcc
echo module load gcc
echo module load gsl
echo module load samtools
module rm gcc
module load gcc
module load gsl  
module load samtools

export SampleID=PA2013
export DATA_DIR=/N/dc2/scratch/xw63/$SampleID/debug_mapgd
export HeaderFile=$DATA_DIR/PA42.header

set -x
cd $DATA_DIR
set +x
echo ===============================================================
echo 0. Make a header file
echo ===============================================================
set -x
time samtools view -H $DATA_DIR/$SampleID-001-RG_Sorted_dedup_realigned_Clipped.bam > $HeaderFile
set +x
echo ===============================================================
echo 1-1. Make a pro file of nucleotide-read quartets -counts of A, C, G, and T, from the mpileup files of the clones.
echo ===============================================================
echo In the original pipeline, this step is implemented by the following command:
echo 'mapgd proview -i *.mpileup -H $HeaderFile > $SampleID.pro.txt' 
echo Because it is not fully parallelized, this is very slow. The computation will takes up to 50-100 hours for a population with 96 clones. To reduce the computation time, this step is implemented with the following commands instead:
set -x
time mapgd proview -i $SampleID-001.mpileup -H $HeaderFile > $SampleID-001.proview &
time mapgd proview -i $SampleID-002.mpileup -H $HeaderFile > $SampleID-002.proview &
time mapgd proview -i $SampleID-003.mpileup -H $HeaderFile > $SampleID-003.proview &
wait
set +x
echo In this way, mapgd proview is executed for each of the 96 clones.  Because all processes can be run simutaneously in independent threads, the computation time is greatly deduced:
set +x

echo ===============================================================
echo 1-2. Combine all mapgd proview files into one .
echo ===============================================================
echo This java program will find all mapgd  proview, *.pro.txt, files in the DATA_DIR and fastly combine them into one single file named SampleID.combined.pro.txt. The data format is kept the same as  that of the mapgd  proview output.
set -x
time java -cp ~/daphnia/DaphniaVariantCall CombineProview $DATA_DIR $SampleID
set +x
echo ===============================================================
echo 2. Exclude mtDNA data from the pro file.
echo ===============================================================
echo if mtDNA sequence is not included in the reference genome, skip this step:
echo if mtDNA sequence is included in the reference genome, execute this:
set -x
#time grep -v '^PA42_mt_genome' $SampleID.combined.pro.txt > Nuc_$SampleID.combined.pro.txt
#mv Nuc_$SampleID.combined.Pro.txt $SampleID.combined.pro.txt
set +x

echo ===============================================================
echo 3. Run the allele command to estimate allele and genotype frequencies from the pro file.
echo ===============================================================
set -x
time mapgd allele -i $DATA_DIR/$SampleID.combined.pro.txt -o $DATA_DIR/$SampleID.combined.map -p $DATA_DIR/$SampleID.combined.clean
set +x

echo ===============================================================
echo 4. Run the filter command to filter the map file of ML estimates of the parameters.
echo ===============================================================
set -x
time mapgd filter -i $DATA_DIR/$SampleID.combined.map.map -p 20 -q 0.05 -Q 0.45 -c 800 -C 2400 -o $DATA_DIR/$SampleID.combined_filtered.map
set +x
echo -p: minimum value of the likelihood-ratio test statistic for polymorphism 
echo -q: minimum minor-allele frequency estimate
echo -Q: maximum minor-allele frequency estimate
echo -c: minimum population coverage
echo -C: maximum population coverage
echo ===============================================================
echo 5. Run the genotype command to generate a file of genotype likelihoods
echo ===============================================================
set -x
time mapgd genotype -p $DATA_DIR/$SampleID.combined.clean.pro -m $DATA_DIR/$SampleID.combined_filtered.map.map > $DATA_DIR/$SampleID.combined.genotype
set +x

echo ===============================================================
echo Remove the unnecessary header and footer
echo ===============================================================
set -x
time awk '{if ($3 != "MN_FREQ" && $3 >= 0.0 && $3 <= 1.0) print}' $DATA_DIR/$SampleID.combined.genotype > $DATA_DIR/$SampleID.combined_F.genotype
set +x
echo ===============================================================
echo Randomly pick a specified number - 200000 of SNPs from the file of genotype likelihoods 
===============================================================

set -x
time /N/dc2/projects/daphpops/Software/MAPGD-0.4.26/extras/sub_sample.py $DATA_DIR/$SampleID.combined_F.genotype -N 200000 > $DATA_DIR/$SampleID.combined_F_200K.genotype
set +x
echo ===============================================================
echo Extract the header from the file of genotype likelihoods
echo ===============================================================
set -x
time head -n -1 $DATA_DIR/$SampleID.combined.genotype | awk '{if ($3 == NULL || $1 ~ /^@/) print}' > $DATA_DIR/$SampleID.combined_header.genotype
set +x
echo ===============================================================
echo Extract the footer from the file of genotype likelihoods
echo ===============================================================

set -x
time tail -n 1 $DATA_DIR/$SampleID.combined.genotype > $DATA_DIR/$SampleID.combined_footer.genotype
set +x
echo ===============================================================
echo Add the header and footer to the sub-sample of the file of genotype likelihoods
echo ===============================================================

set -x
time cat $DATA_DIR/$SampleID.combined_header.genotype $DATA_DIR/$SampleID.combined_F_200K.genotype $DATA_DIR/$SampleID.combined_footer.genotype > $DATA_DIR/$SampleID.combined_F_200K_wh_wf.genotype
set +x
echo ===============================================================
echo 7. Run the relatedness command
echo ===============================================================

set -x
time mapgd relatedness -i $DATA_DIR/$SampleID.combined_F_200K_wh_wf.genotype -o $DATA_DIR/$SampleID.combined_F_200K_wh_wf_rel.out

set +x

